import * as tslib_1 from "tslib";
/**
 * @name responsive-state
 * @description Core responsive state provider in ngx-responsive
 *
 * @license MIT
 */
import { Injectable, PLATFORM_ID, Inject } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { BehaviorSubject, combineLatest } from 'rxjs';
import { fromEvent } from 'rxjs';
import { debounceTime } from 'rxjs/operators';
import { defaultIfEmpty } from 'rxjs/operators';
import { map } from 'rxjs/operators';
import { startWith } from 'rxjs/operators';
import { REG_TABLETS, REG_MOBILES, REG_SMARTS_TV, REG_BROWSERS, REG_SORT_NAMES, REG_GAME_DEVICES, REG_BOTS, REG_OS, REG_WINDOWS_OS_VERSION, REG_LINUX_OS, USER_AGENT, REG_IE_VERSIONS, TABLET, WINDOWS_OS, LINUX_OS, MOBILE, IE_VERSIONS } from '../../constants';
import { ResponsiveConfig } from '../responsive-config/responsive-config';
var ResponsiveState = /** @class */ (function () {
    function ResponsiveState(_responsiveConfig, _platformId) {
        this._responsiveConfig = _responsiveConfig;
        this._platformId = _platformId;
        this._windows = {};
        this._window = null;
        this._screenWidth = null;
        this._screenHeight = null;
        this._userAgent = null;
        this._isBrowser = null;
        this._forceRefresh$ = new BehaviorSubject(null);
        this._isBrowser = isPlatformBrowser(this._platformId);
        this._window = (this._isBrowser) ? window : null;
        this._screenWidth = (this._isBrowser) ? this._window.screen.width : 0;
        this._screenHeight = (this._isBrowser) ? this._window.screen.height : 0;
        this._userAgent = (this._isBrowser) ? this._window.navigator.userAgent.toLowerCase() : null;
        if (this._isBrowser) {
            var _resize$ = combineLatest(fromEvent(this._window, 'resize').pipe(debounceTime(this._responsiveConfig.config.debounceTime), defaultIfEmpty(), startWith(this.getWidth('window'))), this._forceRefresh$).pipe(debounceTime(this._responsiveConfig.config.debounceTime));
            var _pixelRatio$ = fromEvent(this._window, 'onload')
                .pipe(defaultIfEmpty(), startWith(this.getDevicePixelRatio()));
            var _device$ = fromEvent(this._window, 'onload')
                .pipe(defaultIfEmpty(), startWith(this.getUserAgent()));
            var _userAgent$ = fromEvent(this._window, 'onload')
                .pipe(defaultIfEmpty(), startWith(this.userAgentData()));
            var _orientation$ = fromEvent(this._window, 'orientationchange')
                .pipe(defaultIfEmpty(), startWith(this.getOrientation()));
            this.elemento$ = _resize$.pipe(map(this.sizeOperations.bind(this)));
            this.ancho$ = _resize$.pipe(map(this.sizeObserver.bind(this)));
            this.browser$ = _device$.pipe(map(this.browserName.bind(this)));
            this.pixel$ = _pixelRatio$.pipe(map(this.pixelRatio.bind(this)));
            this.device$ = _device$.pipe(map(this.deviceDetection.bind(this)));
            this.orientation$ = _orientation$.pipe(map(this.orientationDevice.bind(this)));
            this.standard$ = _device$.pipe(map(this.standardDevices.bind(this)));
            this.ieVersion$ = _device$.pipe(map(this.ieVersionDetect.bind(this)));
            this.userAgent$ = _userAgent$.pipe(map(this.userAgentData.bind(this)));
        }
    }
    ResponsiveState.prototype.forceRefresh = function () {
        this._forceRefresh$.next(null);
    };
    /**
    * @name registerWindow
    * @param rw
    * @param _window
    */
    ResponsiveState.prototype.registerWindow = function (rw, _window) {
        if (_window === void 0) { _window = null; }
        if (rw.name && !this._windows[rw.name]) {
            this._windows[rw.name] = rw;
            if (_window !== null) {
                _window.dispatchEvent(new Event('resize'));
            }
        }
    };
    /**
    * @name unregisterWindow
    * @param rw
    * @param _window
    */
    ResponsiveState.prototype.unregisterWindow = function (rw, _window) {
        if (_window === void 0) { _window = null; }
        for (var rwn in this._windows) {
            if (this._windows[rwn] === rw) {
                delete (this._windows[rwn]);
            }
        }
        if (_window !== null) {
            _window.dispatchEvent(new Event('resize'));
        }
    };
    /**
    * @name getWidth
    * @param windowName
    */
    ResponsiveState.prototype.getWidth = function (windowName) {
        if (windowName === void 0) { windowName = null; }
        if (this._windows !== null && this._isBrowser) {
            if (windowName && this._windows[windowName]) {
                return this._windows[windowName].getWidth();
            }
            else {
                return this._window.innerWidth;
            }
        }
        return 0;
    };
    /**
    * @name getDevicePixelRatio
    */
    ResponsiveState.prototype.getDevicePixelRatio = function () {
        var ratio = 1;
        if (this._isBrowser) {
            if (typeof this._window.screen.systemXDPI !== 'undefined' &&
                typeof this._window.screen.logicalXDPI !== 'undefined' &&
                this._window.screen.systemXDPI > this._window.screen.logicalXDPI) {
                ratio = this._window.screen.systemXDPI / this._window.screen.logicalXDPI;
            }
            else if (typeof this._window.devicePixelRatio !== 'undefined') {
                ratio = this._window.devicePixelRatio;
            }
        }
        return ratio;
    };
    /**
    * @name getOrientation
    */
    ResponsiveState.prototype.getOrientation = function () {
        return (this._isBrowser) ? window.orientation : null;
    };
    /**
    * @name sizeObserver
    */
    ResponsiveState.prototype.sizeObserver = function () {
        return (this._windows !== null && this._isBrowser) ? this.getWidth('window') : 0;
    };
    /**
     * @name sizeOperations
     */
    ResponsiveState.prototype.sizeOperations = function () {
        var _sizes = null;
        var _breackpoints = this._responsiveConfig.config.breakPoints;
        if (this._windows !== null && this._isBrowser && _breackpoints !== null) {
            var _width = this.getWidth('window');
            if (_breackpoints.xl.min <= _width) {
                _sizes = 'xl';
            }
            else if (_breackpoints.lg.max >= _width && _breackpoints.lg.min <= _width) {
                _sizes = 'lg';
            }
            else if (_breackpoints.md.max >= _width && _breackpoints.md.min <= _width) {
                _sizes = 'md';
            }
            else if (_breackpoints.sm.max >= _width && _breackpoints.sm.min <= _width) {
                _sizes = 'sm';
            }
            else if (_breackpoints.xs.max >= _width) {
                _sizes = 'xs';
            }
        }
        return _sizes;
    };
    /**
     * @name sizeOperations
     */
    ResponsiveState.prototype.pixelRatio = function () {
        var _pixelRatio = null;
        if (this._isBrowser && this._screenWidth !== 0 && this._screenHeight !== 0) {
            if (this.testIs4k()) {
                _pixelRatio = '4k';
            }
            else if (this.getDevicePixelRatio() > 1) {
                _pixelRatio = 'retina';
            }
            else if (this.getDevicePixelRatio() === 1) {
                _pixelRatio = '1x';
            }
        }
        return _pixelRatio;
    };
    /**
     * @name testIs4k
     * @param screenHeight
     * @param screenWidth
     */
    ResponsiveState.prototype.testIs4k = function () {
        return (this._screenHeight !== 0 && this._screenWidth !== 0) ?
            ((this._screenHeight < this._screenWidth) ? (this._screenWidth > 3839) : (this._screenHeight > 3839)) : false;
    };
    /**
     * @name orientationDevice
     */
    ResponsiveState.prototype.orientationDevice = function () {
        var _orientationDevice = null;
        if (this._isBrowser) {
            if (this.isMobile() || this.isTablet()) {
                if (this._window.innerHeight > this._window.innerWidth) {
                    _orientationDevice = 'portrait';
                }
                else {
                    _orientationDevice = 'landscape';
                }
            }
            else if (this.isSMART() || this.isDesktop()) {
                _orientationDevice = 'landscape';
            }
        }
        return _orientationDevice;
    };
    /**
     * @name getUserAgent
     */
    ResponsiveState.prototype.getUserAgent = function () {
        return (this._isBrowser) ? this._window.navigator.userAgent.toLowerCase() : null;
    };
    /**
     * @name userAgentData
     */
    ResponsiveState.prototype.userAgentData = function () {
        if (this._window === null) {
            return USER_AGENT;
        }
        var DEFAULT_USER_AGENT_VALUE = '';
        var _ieVersionState = (this.ieVersionDetect() !== null);
        var _isGameDevice = this.isGameDevice();
        var _isSMART = this.isSMART();
        var _isDesktop = this.isDesktop();
        var _isTablet = this.isTablet();
        var _isMobile = this.isMobile();
        var _isWindows = this.isWindows();
        var _isLinux = this.isLinux();
        return {
            device: this.deviceDetection(),
            browser: this.browserName(),
            pixelratio: this.pixelRatio(),
            ie_version: {
                name: (_ieVersionState) ? this.ieVersionDetect() : DEFAULT_USER_AGENT_VALUE,
                state: _ieVersionState
            },
            game_device: {
                name: (_isGameDevice) ? this.gameDevices() : DEFAULT_USER_AGENT_VALUE,
                state: _isGameDevice
            },
            smart_tv: {
                name: (_isSMART) ? this.smartTv() : DEFAULT_USER_AGENT_VALUE,
                state: _isSMART
            },
            desktop: {
                name: (_isDesktop) ? this.desktop() : DEFAULT_USER_AGENT_VALUE,
                state: _isDesktop
            },
            tablet: {
                name: (_isTablet) ? this.tablet() : DEFAULT_USER_AGENT_VALUE,
                state: _isTablet
            },
            mobile: {
                name: (_isMobile) ? this.mobile() : DEFAULT_USER_AGENT_VALUE,
                state: _isMobile
            },
            window_os: {
                name: (_isWindows) ? this.windows() : DEFAULT_USER_AGENT_VALUE,
                state: _isWindows
            },
            linux_os: {
                name: (_isLinux) ? this.linux() : DEFAULT_USER_AGENT_VALUE,
                state: _isLinux
            },
            bot: this.isBot()
        };
    };
    /**
     * @name deviceDetection
     */
    ResponsiveState.prototype.deviceDetection = function () {
        if (this._isBrowser) {
            if (this.isMobile()) {
                return 'mobile';
            }
            else if (this.isTablet()) {
                return 'tablet';
            }
            else if (this.isSMART()) {
                return 'smarttv';
            }
            else if (this.isDesktop()) {
                return 'desktop';
            }
        }
        return null;
    };
    /**
     * @name standardDevices
     */
    ResponsiveState.prototype.standardDevices = function () {
        if (this._isBrowser) {
            if (REG_MOBILES.IPHONE.REG.test(this._userAgent)) {
                return 'iphone';
            }
            else if (REG_TABLETS.IPAD.REG.test(this._userAgent)) {
                return 'ipad';
            }
            else if (this.isMobile() && REG_MOBILES.ANDROID.REG.test(this._userAgent)) {
                return 'android mobile';
            }
            else if (this.isTablet() && REG_MOBILES.ANDROID.REG.test(this._userAgent)) {
                return 'android tablet';
            }
            else if (REG_MOBILES.WINDOWS_PHONE.REG.test(this._userAgent)) {
                return 'windows phone';
            }
        }
        return null;
    };
    /**
     * @name ieVersionDetect
     */
    ResponsiveState.prototype.ieVersionDetect = function () {
        if (this._isBrowser) {
            var _userAgent = this.getUserAgent();
            var msie = _userAgent.indexOf('msie ');
            var _ieVersion = null;
            if (REG_IE_VERSIONS.MS_MSIE.REG.test(_userAgent)) {
                _ieVersion = parseInt(_userAgent.substring(msie + 5, _userAgent.indexOf('.', msie)), 10);
                if (_ieVersion === 7) {
                    return IE_VERSIONS.IE_7;
                }
                else if (_ieVersion == 8) {
                    return IE_VERSIONS.IE_8;
                }
                else if (_ieVersion == 9) {
                    return IE_VERSIONS.IE_9;
                }
                else if (_ieVersion == 10) {
                    return IE_VERSIONS.IE_10;
                }
            }
            // let trident = this._userAgent.indexOf('trident/')
            if (REG_IE_VERSIONS.MS_TRIDENT.REG.test(_userAgent)) {
                var _rv = _userAgent.indexOf('rv:');
                _ieVersion = parseInt(_userAgent.substring(_rv + 3, _userAgent.indexOf('.', _rv)), 10);
                if (_ieVersion == 11) {
                    return IE_VERSIONS.IE_11;
                }
            }
            // let edge = this._userAgent.indexOf('Edge/')
            if (REG_IE_VERSIONS.MS_EDGE.REG.test(_userAgent)) {
                return IE_VERSIONS.IE_12;
            }
        }
        return null;
    };
    /**
     * @name browserName
     */
    ResponsiveState.prototype.browserName = function () {
        var _browserName = null;
        if (this._isBrowser) {
            if (REG_SORT_NAMES.WEBKIT.REG.test(this._userAgent) && REG_SORT_NAMES.CHROME.REG.test(this._userAgent)
                && !REG_BROWSERS.IE.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.CHROME.VALUE;
            }
            else if (REG_SORT_NAMES.MOZILLA.REG.test(this._userAgent) &&
                REG_BROWSERS.FIREFOX.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.FIREFOX.VALUE;
            }
            else if (REG_BROWSERS.IE.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.IE.VALUE;
            }
            else if (REG_SORT_NAMES.SAFARI.REG.test(this._userAgent) &&
                REG_SORT_NAMES.APPLE_WEBKIT.REG.test(this._userAgent) && !REG_SORT_NAMES.CHROME.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.SAFARI.VALUE;
            }
            else if (REG_BROWSERS.OPERA.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.OPERA.VALUE;
            }
            else if (REG_BROWSERS.SILK.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.SILK.VALUE;
            }
            else if (REG_BROWSERS.YANDEX.REG.test(this._userAgent)) {
                _browserName = REG_BROWSERS.YANDEX.VALUE;
            }
            else {
                _browserName = REG_BROWSERS.NA.VALUE;
            }
        }
        return _browserName;
    };
    /**
     * @name gameDevices
     */
    ResponsiveState.prototype.gameDevices = function () {
        var _gameDevice = null;
        if (this._userAgent !== null) {
            for (var _reg in REG_GAME_DEVICES) {
                if (REG_GAME_DEVICES[_reg].REG.test(this._userAgent)) {
                    _gameDevice = REG_GAME_DEVICES[_reg].VALUE;
                }
            }
        }
        return _gameDevice;
    };
    /**
     * @name smartTv
     */
    ResponsiveState.prototype.smartTv = function () {
        var _smartTv = null;
        if (this._userAgent !== null) {
            if (REG_SMARTS_TV.CHROMECAST.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.CHROMECAST.VALUE;
            }
            else if (REG_SMARTS_TV.APPLE_TV.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.APPLE_TV.VALUE;
            }
            else if (REG_SMARTS_TV.GOOGLE_TV.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.GOOGLE_TV.VALUE;
            }
            else if (REG_SMARTS_TV.XBOX_ONE.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.XBOX_ONE.VALUE;
            }
            else if (REG_SMARTS_TV.PS4.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.PS4.VALUE;
            }
            else if (REG_SMARTS_TV.GENERIC_TV.REG.test(this._userAgent)) {
                _smartTv = REG_SMARTS_TV.GENERIC_TV.VALUE;
            }
        }
        return _smartTv;
    };
    /**
     * @name desktop
     */
    ResponsiveState.prototype.desktop = function () {
        var _desktop = null;
        if (this._userAgent !== null) {
            if (REG_OS.WINDOWS.REG.test(this._userAgent)) {
                _desktop = REG_OS.WINDOWS.VALUE;
            }
            else if (REG_OS.MAC_OS.REG.test(this._userAgent)) {
                _desktop = REG_OS.MAC_OS.VALUE;
            }
            else if (REG_OS.LINUX.REG.test(this._userAgent)) {
                _desktop = REG_OS.LINUX.VALUE;
            }
            else if (REG_OS.FIREFOX_OS.REG.test(this._userAgent)) {
                _desktop = REG_OS.FIREFOX_OS.VALUE;
            }
            else if (REG_OS.FIREFOX_OS.REG.test(this._userAgent)) {
                _desktop = REG_OS.CHROME_OS.VALUE;
            }
        }
        return _desktop;
    };
    /**
     * @name tablet
     */
    ResponsiveState.prototype.tablet = function () {
        var _tablet = null;
        if (this._userAgent !== null) {
            if (REG_TABLETS.IPAD.REG.test(this._userAgent)) {
                _tablet = TABLET.IPAD;
            }
            else if (REG_TABLETS.TABLET.REG.test(this._userAgent) && REG_MOBILES.ANDROID.REG.test(this._userAgent)) {
                _tablet = TABLET.ANDROID;
            }
            else if (REG_TABLETS.KINDLE.REG.test(this._userAgent)) {
                _tablet = TABLET.KINDLE;
            }
            else if (REG_TABLETS.TABLET.REG.test(this._userAgent)) {
                _tablet = TABLET.GENERIC_TABLET;
            }
        }
        return _tablet;
    };
    /**
     * @name mobile
     */
    ResponsiveState.prototype.mobile = function () {
        var _mobile = null;
        if (this._userAgent !== null) {
            for (var _reg in REG_MOBILES) {
                if (REG_MOBILES[_reg].REG.test(this._userAgent)) {
                    _mobile = REG_MOBILES[_reg].VALUE;
                }
            }
            if (_mobile === null && this.isMobile()) {
                _mobile = MOBILE.GENERIC_MOBILE;
            }
        }
        return _mobile;
    };
    /**
     * @name windows
     */
    ResponsiveState.prototype.windows = function () {
        var _windows = null;
        if (this._userAgent !== null) {
            for (var _reg in REG_WINDOWS_OS_VERSION) {
                if (REG_WINDOWS_OS_VERSION[_reg].REG.test(this._userAgent)) {
                    _windows = REG_WINDOWS_OS_VERSION[_reg].VALUE;
                }
            }
            if (_windows === null && this.isDesktop() && this.isWindows()) {
                _windows = WINDOWS_OS.GENERIC_WINDOWS;
            }
        }
        return _windows;
    };
    /**
     * @name linux
     */
    ResponsiveState.prototype.linux = function () {
        var _linux = null;
        if (this._userAgent !== null) {
            for (var _reg in REG_LINUX_OS) {
                if (REG_LINUX_OS[_reg].REG.test(this._userAgent)) {
                    _linux = REG_LINUX_OS[_reg].VALUE;
                }
            }
            if (_linux === null && this.isDesktop() && this.isLinux()) {
                _linux = LINUX_OS.GENERIC_LINUX;
            }
        }
        return _linux;
    };
    /**
     * @name isMobile
     */
    ResponsiveState.prototype.isMobile = function () {
        var _result = false;
        if (this._userAgent !== null) {
            var _userAgent = this._userAgent;
            _result = (REG_MOBILES.GENERIC_REG_1.REG.test(_userAgent) && this.isTablet() === false ||
                REG_MOBILES.GENERIC_REG_2.REG.test(_userAgent.substr(0, 4)) && this.isTablet() === false);
        }
        return _result;
    };
    /**
     * @name isTablet
     */
    ResponsiveState.prototype.isTablet = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_TABLETS.IPAD.REG.test(this._userAgent) ||
                REG_TABLETS.KINDLE.REG.test(this._userAgent) ||
                REG_TABLETS.TABLET.REG.test(this._userAgent));
        }
        return _result;
    };
    /**
     * @name isSMART
     */
    ResponsiveState.prototype.isSMART = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_SMARTS_TV.GENERIC_TV.REG.test(this._userAgent) ||
                REG_SMARTS_TV.PS4.REG.test(this._userAgent) ||
                REG_SMARTS_TV.XBOX_ONE.REG.test(this._userAgent));
        }
        return _result;
    };
    /**
     * @name isDesktop
     */
    ResponsiveState.prototype.isDesktop = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = !(this.isMobile() || this.isTablet() || this.isSMART());
        }
        return _result;
    };
    /**
     * @name isGameDevice
     */
    ResponsiveState.prototype.isGameDevice = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_GAME_DEVICES.PS4.REG.test(this._userAgent) || REG_GAME_DEVICES.PS3.REG.test(this._userAgent)
                || REG_GAME_DEVICES.XBOX.REG.test(this._userAgent) || REG_GAME_DEVICES.XBOX_ONE.REG.test(this._userAgent)
                || REG_GAME_DEVICES.WII.REG.test(this._userAgent) || REG_GAME_DEVICES.WII_U.REG.test(this._userAgent)
                || REG_GAME_DEVICES.NINTENDO_3DS.REG.test(this._userAgent) || REG_GAME_DEVICES.PS_VITA.REG.test(this._userAgent)
                || REG_GAME_DEVICES.PSP.REG.test(this._userAgent));
        }
        return _result;
    };
    /**
     * @name isWindows
     */
    ResponsiveState.prototype.isWindows = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_OS.WINDOWS.REG.test(this._userAgent));
        }
        return _result;
    };
    /**
     * @name isLinux
     */
    ResponsiveState.prototype.isLinux = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_OS.LINUX.REG.test(this._userAgent));
        }
        return _result;
    };
    /**
     * @name isBot
     */
    ResponsiveState.prototype.isBot = function () {
        var _result = false;
        if (this._userAgent !== null) {
            _result = (REG_BOTS.GENERIC_BOT.REG.test(this._userAgent));
        }
        return _result;
    };
    ResponsiveState = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(1, Inject(PLATFORM_ID)),
        tslib_1.__metadata("design:paramtypes", [ResponsiveConfig, Object])
    ], ResponsiveState);
    return ResponsiveState;
}());
export { ResponsiveState };
//# sourceMappingURL=data:application/json;base64,