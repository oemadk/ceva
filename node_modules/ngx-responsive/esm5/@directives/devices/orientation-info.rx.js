import * as tslib_1 from "tslib";
/**
 * @name orientation-info.rx
 * @description Orientation reactive service in ngx-responsive
 *
 * @license MIT
 */
import { Injectable } from '@angular/core';
import { PLATFORM_ID, Inject } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { OrientationInfo } from './orientation-info';
var OrientationInfoRx = /** @class */ (function (_super) {
    tslib_1.__extends(OrientationInfoRx, _super);
    function OrientationInfoRx(_responsiveState, _platformId) {
        var _this = _super.call(this, _responsiveState, _platformId) || this;
        _this._responsiveState = _responsiveState;
        _this._platformId = _platformId;
        return _this;
    }
    OrientationInfoRx = tslib_1.__decorate([
        Injectable(),
        tslib_1.__param(1, Inject(PLATFORM_ID)),
        tslib_1.__metadata("design:paramtypes", [ResponsiveState, Object])
    ], OrientationInfoRx);
    return OrientationInfoRx;
}(OrientationInfo));
export { OrientationInfoRx };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JpZW50YXRpb24taW5mby5yeC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1yZXNwb25zaXZlLyIsInNvdXJjZXMiOlsiQGRpcmVjdGl2ZXMvZGV2aWNlcy9vcmllbnRhdGlvbi1pbmZvLnJ4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7R0FLRztBQUNILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQzFGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUdyRDtJQUF1Qyw2Q0FBZTtJQUNsRCwyQkFDVyxnQkFBaUMsRUFDVCxXQUFXO1FBRjlDLFlBR0ksa0JBQU0sZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLFNBQUc7UUFGaEMsc0JBQWdCLEdBQWhCLGdCQUFnQixDQUFpQjtRQUNULGlCQUFXLEdBQVgsV0FBVyxDQUFBOztJQUNKLENBQUM7SUFKbEMsaUJBQWlCO1FBRDdCLFVBQVUsRUFBRTtRQUlKLG1CQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtpREFESyxlQUFlO09BRm5DLGlCQUFpQixDQUs3QjtJQUFELHdCQUFDO0NBQUEsQUFMRCxDQUF1QyxlQUFlLEdBS3JEO1NBTFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBuYW1lIG9yaWVudGF0aW9uLWluZm8ucnhcclxuICogQGRlc2NyaXB0aW9uIE9yaWVudGF0aW9uIHJlYWN0aXZlIHNlcnZpY2UgaW4gbmd4LXJlc3BvbnNpdmVcclxuICpcclxuICogQGxpY2Vuc2UgTUlUXHJcbiAqL1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBMQVRGT1JNX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmVzcG9uc2l2ZVN0YXRlIH0gZnJvbSAnLi4vLi4vQGNvcmUvcHJvdmlkZXJzL3Jlc3BvbnNpdmUtc3RhdGUvcmVzcG9uc2l2ZS1zdGF0ZSc7XHJcbmltcG9ydCB7IE9yaWVudGF0aW9uSW5mbyB9IGZyb20gJy4vb3JpZW50YXRpb24taW5mbyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBPcmllbnRhdGlvbkluZm9SeCBleHRlbmRzIE9yaWVudGF0aW9uSW5mbyAge1xyXG4gICAgY29uc3RydWN0b3IoIFxyXG4gICAgICAgIHB1YmxpYyBfcmVzcG9uc2l2ZVN0YXRlOiBSZXNwb25zaXZlU3RhdGUsXHJcbiAgICAgICAgQEluamVjdChQTEFURk9STV9JRCkgcHJvdGVjdGVkIF9wbGF0Zm9ybUlkXHJcbiAgICApIHsgc3VwZXIoX3Jlc3BvbnNpdmVTdGF0ZSwgX3BsYXRmb3JtSWQpOyB9XHJcbn1cclxuIl19