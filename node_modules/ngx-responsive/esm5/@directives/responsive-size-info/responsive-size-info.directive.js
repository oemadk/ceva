import * as tslib_1 from "tslib";
/**
 * @name responsive-size-info.directive
 * @description Responsive Size Info directive in ngx-responsive
 *
 * @license MIT
 */
import { Directive, EventEmitter, Input, Output, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { PLATFORM_ID, Inject } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { ResponsiveSizeInfo } from './responsive-size-info';
var ResponsiveSizeInfoDirective = /** @class */ (function (_super) {
    tslib_1.__extends(ResponsiveSizeInfoDirective, _super);
    function ResponsiveSizeInfoDirective(_responsiveState, viewContainer, cd, _platformId) {
        var _this = _super.call(this, _responsiveState, _platformId) || this;
        _this._responsiveState = _responsiveState;
        _this.viewContainer = viewContainer;
        _this.cd = cd;
        _this._platformId = _platformId;
        _this.statechanges = new EventEmitter();
        return _this;
    }
    Object.defineProperty(ResponsiveSizeInfoDirective.prototype, "responsiveSizeInfo", {
        set: function (grid_state) {
            this._updateData(this.currentstate);
        },
        enumerable: true,
        configurable: true
    });
    ResponsiveSizeInfoDirective.prototype.ngOnInit = function () {
        this.connect();
    };
    ResponsiveSizeInfoDirective.prototype.ngOnDestroy = function () {
        this.disconnect();
    };
    ResponsiveSizeInfoDirective.prototype._updateData = function (value) {
        this.statechanges.emit(value);
        this.cd.markForCheck();
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ResponsiveSizeInfoDirective.prototype, "responsiveSizeInfo", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], ResponsiveSizeInfoDirective.prototype, "statechanges", void 0);
    ResponsiveSizeInfoDirective = tslib_1.__decorate([
        Directive({ selector: 'responsiveSizeInfo' }),
        tslib_1.__param(3, Inject(PLATFORM_ID)),
        tslib_1.__metadata("design:paramtypes", [ResponsiveState,
            ViewContainerRef,
            ChangeDetectorRef, Object])
    ], ResponsiveSizeInfoDirective);
    return ResponsiveSizeInfoDirective;
}(ResponsiveSizeInfo));
export { ResponsiveSizeInfoDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2l2ZS1zaXplLWluZm8uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXJlc3BvbnNpdmUvIiwic291cmNlcyI6WyJAZGlyZWN0aXZlcy9yZXNwb25zaXZlLXNpemUtaW5mby9yZXNwb25zaXZlLXNpemUtaW5mby5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBcUIsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0gsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQzFGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRzVEO0lBQWlELHVEQUFrQjtJQU8vRCxxQ0FBbUIsZ0JBQWlDLEVBQ3pDLGFBQStCLEVBQy9CLEVBQXFCLEVBQ0csV0FBVztRQUg5QyxZQUlJLGtCQUFNLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxTQUFHO1FBSnhCLHNCQUFnQixHQUFoQixnQkFBZ0IsQ0FBaUI7UUFDekMsbUJBQWEsR0FBYixhQUFhLENBQWtCO1FBQy9CLFFBQUUsR0FBRixFQUFFLENBQW1CO1FBQ0csaUJBQVcsR0FBWCxXQUFXLENBQUE7UUFMcEMsa0JBQVksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7SUFNckIsQ0FBQztJQVRsQyxzQkFBSSwyREFBa0I7YUFBdEIsVUFBdUIsVUFBNkI7WUFDekQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDeEMsQ0FBQzs7O09BQUE7SUFRRCw4Q0FBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFDRCxpREFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFDUyxpREFBVyxHQUFyQixVQUFzQixLQUFVO1FBQzVCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQW5CUTtRQUFSLEtBQUssRUFBRTs7O3lFQUVQO0lBQ1M7UUFBVCxNQUFNLEVBQUU7MENBQWUsWUFBWTtxRUFBMkI7SUFMdEQsMkJBQTJCO1FBRHZDLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxvQkFBb0IsRUFBRSxDQUFDO1FBV3JDLG1CQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtpREFIYSxlQUFlO1lBQzFCLGdCQUFnQjtZQUMzQixpQkFBaUI7T0FUdkIsMkJBQTJCLENBc0J2QztJQUFELGtDQUFDO0NBQUEsQUF0QkQsQ0FBaUQsa0JBQWtCLEdBc0JsRTtTQXRCWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQG5hbWUgcmVzcG9uc2l2ZS1zaXplLWluZm8uZGlyZWN0aXZlXHJcbiAqIEBkZXNjcmlwdGlvbiBSZXNwb25zaXZlIFNpemUgSW5mbyBkaXJlY3RpdmUgaW4gbmd4LXJlc3BvbnNpdmVcclxuICpcclxuICogQGxpY2Vuc2UgTUlUXHJcbiAqL1xyXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NvbnRhaW5lclJlZiwgT25Jbml0LCBPbkRlc3Ryb3ksIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBMQVRGT1JNX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFJlc3BvbnNpdmVTdGF0ZSB9IGZyb20gJy4uLy4uL0Bjb3JlL3Byb3ZpZGVycy9yZXNwb25zaXZlLXN0YXRlL3Jlc3BvbnNpdmUtc3RhdGUnO1xyXG5pbXBvcnQgeyBSZXNwb25zaXZlU2l6ZUluZm8gfSBmcm9tICcuL3Jlc3BvbnNpdmUtc2l6ZS1pbmZvJztcclxuXHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ3Jlc3BvbnNpdmVTaXplSW5mbycgfSlcclxuZXhwb3J0IGNsYXNzIFJlc3BvbnNpdmVTaXplSW5mb0RpcmVjdGl2ZSBleHRlbmRzIFJlc3BvbnNpdmVTaXplSW5mbyBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIHB1YmxpYyBjdXJyZW50c3RhdGU6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHNldCByZXNwb25zaXZlU2l6ZUluZm8oZ3JpZF9zdGF0ZTogc3RyaW5nW10gfCBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl91cGRhdGVEYXRhKHRoaXMuY3VycmVudHN0YXRlKTtcclxuICAgIH1cclxuICAgIEBPdXRwdXQoKSBzdGF0ZWNoYW5nZXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBfcmVzcG9uc2l2ZVN0YXRlOiBSZXNwb25zaXZlU3RhdGUsXHJcbiAgICAgICAgcHVibGljIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICAgICAgcHVibGljIGNkOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgICAgICBASW5qZWN0KFBMQVRGT1JNX0lEKSBwcm90ZWN0ZWQgX3BsYXRmb3JtSWRcclxuICAgICkgeyBzdXBlcihfcmVzcG9uc2l2ZVN0YXRlLCBfcGxhdGZvcm1JZCk7IH1cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29ubmVjdCgpO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0KCk7XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgX3VwZGF0ZURhdGEodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc3RhdGVjaGFuZ2VzLmVtaXQodmFsdWUpO1xyXG4gICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XHJcbiAgICB9XHJcbn1cclxuIl19