import { IsDesktopDirective, IsTabletDirective, IsMobileDirective, IsSmartTvDirective, ShowItDeviceDirective, HideItDeviceDirective, IsIphoneDirective, IsIpadDirective, IsAndroidMobileDirective, IsAndroidTabletDirective, IsWindowsPhoneDirective, ShowItStandardDirective, HideItStandardDirective, IsPortraitDirective, IsLandscapeDirective } from './devices-directives';
import { DeviceInfoDirective } from './devices-info.directive';
import { DeviceStandardInfoDirective } from './devices-standard-info.directive';
import { OrientationInfoDirective } from './orientation-info.directive';
import { DeviceInfoRx } from './devices-info.rx';
import { DeviceStandardInfoRx } from './devices-standard-info.rx';
import { OrientationInfoRx } from './orientation-info.rx';
export const DEVICES_DIRECTIVES = [
    IsDesktopDirective,
    IsTabletDirective,
    IsMobileDirective,
    IsSmartTvDirective,
    ShowItDeviceDirective,
    HideItDeviceDirective,
    IsIphoneDirective,
    IsIpadDirective,
    IsAndroidMobileDirective,
    IsAndroidTabletDirective,
    IsWindowsPhoneDirective,
    ShowItStandardDirective,
    HideItStandardDirective,
    IsPortraitDirective,
    IsLandscapeDirective,
    DeviceInfoDirective,
    DeviceStandardInfoDirective,
    OrientationInfoDirective
];
export const DEVICES_INFO_RX = [
    DeviceInfoRx,
    DeviceStandardInfoRx,
    OrientationInfoRx
];
export * from './devices-info.rx';
export * from './devices-standard-info.rx';
export * from './orientation-info.rx';
export * from './devices-info.directive';
export * from './devices-standard-info.directive';
export * from './orientation-info.directive';
export * from './devices-directives';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcmVzcG9uc2l2ZS8iLCJzb3VyY2VzIjpbIkBkaXJlY3RpdmVzL2RldmljZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsT0FBTyxFQUNMLGtCQUFrQixFQUNsQixpQkFBaUIsRUFDakIsaUJBQWlCLEVBQ2pCLGtCQUFrQixFQUNsQixxQkFBcUIsRUFDckIscUJBQXFCLEVBQ3JCLGlCQUFpQixFQUNqQixlQUFlLEVBQ2Ysd0JBQXdCLEVBQ3hCLHdCQUF3QixFQUN4Qix1QkFBdUIsRUFDdkIsdUJBQXVCLEVBQ3ZCLHVCQUF1QixFQUN2QixtQkFBbUIsRUFDbkIsb0JBQW9CLEVBQ3JCLE1BQU0sc0JBQXNCLENBQUM7QUFFOUIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDL0QsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDaEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTFELE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFlO0lBQzVDLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2Ysd0JBQXdCO0lBQ3hCLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsb0JBQW9CO0lBQ3BCLG1CQUFtQjtJQUNuQiwyQkFBMkI7SUFDM0Isd0JBQXdCO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQWU7SUFDekMsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixpQkFBaUI7Q0FDakIsQ0FBQztBQUVILGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLDhCQUE4QixDQUFDO0FBQzdDLGNBQWMsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQG5hbWUgZGV2aWNlc1xyXG4gKiBAZGVzY3JpcHRpb24gRGV2aWNlIG1vZHVsZSBpbiBuZ3gtcmVzcG9uc2l2ZVxyXG4gKlxyXG4gKiBAbGljZW5zZSBNSVRcclxuICovXHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgSXNEZXNrdG9wRGlyZWN0aXZlLFxyXG4gIElzVGFibGV0RGlyZWN0aXZlLFxyXG4gIElzTW9iaWxlRGlyZWN0aXZlLFxyXG4gIElzU21hcnRUdkRpcmVjdGl2ZSxcclxuICBTaG93SXREZXZpY2VEaXJlY3RpdmUsXHJcbiAgSGlkZUl0RGV2aWNlRGlyZWN0aXZlLFxyXG4gIElzSXBob25lRGlyZWN0aXZlLFxyXG4gIElzSXBhZERpcmVjdGl2ZSxcclxuICBJc0FuZHJvaWRNb2JpbGVEaXJlY3RpdmUsXHJcbiAgSXNBbmRyb2lkVGFibGV0RGlyZWN0aXZlLFxyXG4gIElzV2luZG93c1Bob25lRGlyZWN0aXZlLFxyXG4gIFNob3dJdFN0YW5kYXJkRGlyZWN0aXZlLFxyXG4gIEhpZGVJdFN0YW5kYXJkRGlyZWN0aXZlLFxyXG4gIElzUG9ydHJhaXREaXJlY3RpdmUsXHJcbiAgSXNMYW5kc2NhcGVEaXJlY3RpdmVcclxufSBmcm9tICcuL2RldmljZXMtZGlyZWN0aXZlcyc7XHJcblxyXG5pbXBvcnQgeyBEZXZpY2VJbmZvRGlyZWN0aXZlIH0gZnJvbSAnLi9kZXZpY2VzLWluZm8uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRGV2aWNlU3RhbmRhcmRJbmZvRGlyZWN0aXZlIH0gZnJvbSAnLi9kZXZpY2VzLXN0YW5kYXJkLWluZm8uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgT3JpZW50YXRpb25JbmZvRGlyZWN0aXZlIH0gZnJvbSAnLi9vcmllbnRhdGlvbi1pbmZvLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IERldmljZUluZm9SeCB9IGZyb20gJy4vZGV2aWNlcy1pbmZvLnJ4JztcclxuaW1wb3J0IHsgRGV2aWNlU3RhbmRhcmRJbmZvUnggfSBmcm9tICcuL2RldmljZXMtc3RhbmRhcmQtaW5mby5yeCc7XHJcbmltcG9ydCB7IE9yaWVudGF0aW9uSW5mb1J4IH0gZnJvbSAnLi9vcmllbnRhdGlvbi1pbmZvLnJ4JztcclxuXHJcbmV4cG9ydCBjb25zdCBERVZJQ0VTX0RJUkVDVElWRVM6IFByb3ZpZGVyW10gPSBbXHJcbiAgSXNEZXNrdG9wRGlyZWN0aXZlLFxyXG4gIElzVGFibGV0RGlyZWN0aXZlLFxyXG4gIElzTW9iaWxlRGlyZWN0aXZlLFxyXG4gIElzU21hcnRUdkRpcmVjdGl2ZSxcclxuICBTaG93SXREZXZpY2VEaXJlY3RpdmUsXHJcbiAgSGlkZUl0RGV2aWNlRGlyZWN0aXZlLFxyXG4gIElzSXBob25lRGlyZWN0aXZlLFxyXG4gIElzSXBhZERpcmVjdGl2ZSxcclxuICBJc0FuZHJvaWRNb2JpbGVEaXJlY3RpdmUsXHJcbiAgSXNBbmRyb2lkVGFibGV0RGlyZWN0aXZlLFxyXG4gIElzV2luZG93c1Bob25lRGlyZWN0aXZlLFxyXG4gIFNob3dJdFN0YW5kYXJkRGlyZWN0aXZlLFxyXG4gIEhpZGVJdFN0YW5kYXJkRGlyZWN0aXZlLFxyXG4gIElzUG9ydHJhaXREaXJlY3RpdmUsXHJcbiAgSXNMYW5kc2NhcGVEaXJlY3RpdmUsXHJcbiAgRGV2aWNlSW5mb0RpcmVjdGl2ZSxcclxuICBEZXZpY2VTdGFuZGFyZEluZm9EaXJlY3RpdmUsXHJcbiAgT3JpZW50YXRpb25JbmZvRGlyZWN0aXZlXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgREVWSUNFU19JTkZPX1JYOiBQcm92aWRlcltdID0gW1xyXG4gIERldmljZUluZm9SeCxcclxuICBEZXZpY2VTdGFuZGFyZEluZm9SeCxcclxuICBPcmllbnRhdGlvbkluZm9SeFxyXG4gXTtcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vZGV2aWNlcy1pbmZvLnJ4JztcclxuZXhwb3J0ICogZnJvbSAnLi9kZXZpY2VzLXN0YW5kYXJkLWluZm8ucngnO1xyXG5leHBvcnQgKiBmcm9tICcuL29yaWVudGF0aW9uLWluZm8ucngnO1xyXG5leHBvcnQgKiBmcm9tICcuL2RldmljZXMtaW5mby5kaXJlY3RpdmUnO1xyXG5leHBvcnQgKiBmcm9tICcuL2RldmljZXMtc3RhbmRhcmQtaW5mby5kaXJlY3RpdmUnO1xyXG5leHBvcnQgKiBmcm9tICcuL29yaWVudGF0aW9uLWluZm8uZGlyZWN0aXZlJztcclxuZXhwb3J0ICogZnJvbSAnLi9kZXZpY2VzLWRpcmVjdGl2ZXMnO1xyXG4iXX0=